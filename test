--local mon = peripheral.find("monitor")
local net = peripheral.find("modem")

local monitor = nil
local CellSide = nil
local DynamoSide = nil
local peripheralList = peripheral.getNames()

netside = net.getNamesRemote()

netlist = {}

function detectNetworkedDevice(DeviceName)
  for k,v in pairs(netside) do
    if peripheral.getType(v)==DeviceName then
      DeviceSide = v
      break
    end
  end
  return(DeviceSide)
end

function detectDevice(DeviceName)
  DeviceSide="none"
  for k,v in pairs(redstone.getSides()) do
   if peripheral.getType(v)==DeviceName then
     DeviceSide = v
     break
   end
  end
  return(DeviceSide)
end

monitor = detectDevice(monitor)

if MonitorSide~="none" then
  monitor=peripheral.wrap(MonitorSide)
  print ("Monitor on the " .. MonitorSide .. " connected.")
else
  for Index = 1, #peripheralList do
    if string.find(peripheralList[Index], "monitor") then
      monitor=peripheral.wrap(peripheralList[Index])
      print ("Monitor on wired modem: "..peripheralList[Index].." connected.")
    end
  end --for
  if monitor == "none" then
    print ("Warning - No Monitor attached, continuing without.")
  end
end
